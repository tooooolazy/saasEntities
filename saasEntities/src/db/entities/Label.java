package db.entities;

// Generated 21 ��� 2012 12:09:39 �� by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Cacheable;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.BatchSize;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import com.tooooolazy.gwt.widgets.shared.SelectItem;
import com.tooooolazy.util.Messages;

import db.enums.LabelGroupEnum;
import db.enums.StatusEnum;

/**
 * Label generated by hbm2java
 */
@Entity
@BatchSize(size=50)
@Table(name = "labels")
@Cacheable
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class Label implements java.io.Serializable, SelectItem {

	private Integer id;
	private User userByEdUserId;
	private User userByCrUserId;
	private String resourceKey;
	private String resourceValue;
	private Date crDate;
	private Date edDate;
	private LabelGroupEnum group;
//	private Set<Country> countries = new HashSet<Country>(0);
	private Set<LabelML> labelMLs = new HashSet<LabelML>(0);
	private Label aliasFor;
	private StatusEnum status;

	public Label() {
	}

	public Label(String resourceKey, Date crDate) {
		this.resourceKey = resourceKey;
		this.crDate = crDate;
	}
	public Label(String resourceKey, String resourceValue, Date crDate) {
		this.resourceKey = resourceKey;
		this.resourceValue = resourceValue;
		this.crDate = crDate;
	}
	public Label(String resourceKey, String resourceValue, Set<LabelML> labelMLs, Date crDate) {
		this.resourceKey = resourceKey;
		this.resourceValue = resourceValue;
		this.crDate = crDate;
		this.labelMLs = labelMLs;
	}

	public Label(User userByEdUserId, User userByCrUserId, String resourceKey, String resourceValue, Date crDate, Date edDate,
			Set<Country> countries, Set<LabelML> labelMLs) {
		this.userByEdUserId = userByEdUserId;
		this.userByCrUserId = userByCrUserId;
		this.resourceKey = resourceKey;
		this.resourceValue = resourceValue;
		this.crDate = crDate;
		this.edDate = edDate;
//		this.countries = countries;
		this.labelMLs = labelMLs;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ed_user_id")
	public User getUserByEdUserId() {
		return this.userByEdUserId;
	}

	public void setUserByEdUserId(User userByEdUserId) {
		this.userByEdUserId = userByEdUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cr_user_id")
	public User getUserByCrUserId() {
		return this.userByCrUserId;
	}

	public void setUserByCrUserId(User userByCrUserId) {
		this.userByCrUserId = userByCrUserId;
	}

	@Column(name = "resource_key", length = 150)
	public String getResourceKey() {
		return this.resourceKey;
	}

	public void setResourceKey(String resourceKey) {
		this.resourceKey = resourceKey;
	}

	@Column(name = "resource_value", length = 65535)
	public String getResourceValue() {
		return this.resourceValue;
	}

	public void setResourceValue(String resourceValue) {
		this.resourceValue = resourceValue;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "cr_date", nullable = false, length = 19)
	public Date getCrDate() {
		return this.crDate;
	}

	public void setCrDate(Date crDate) {
		this.crDate = crDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ed_date", length = 19)
	public Date getEdDate() {
		return this.edDate;
	}

	public void setEdDate(Date edDate) {
		this.edDate = edDate;
	}

	@Column(name = "group_id")
	public LabelGroupEnum getGroupId() {
		return this.group;
	}

	public void setGroupId(LabelGroupEnum group) {
		this.group = group;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "label")
//	public Set<Country> getCountries() {
//		return this.countries;
//	}
//
//	public void setCountries(Set<Country> countries) {
//		this.countries = countries;
//	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "label")
	@BatchSize(size = 50) 
	public Set<LabelML> getLabelMLs() {
		return this.labelMLs;
	}

	public void setLabelMLs(Set<LabelML> labelMLs) {
		this.labelMLs = labelMLs;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "alias_id", nullable = true)
	public Label getAliasFor() {
		return this.aliasFor;
	}

	public void setAliasFor(Label aliasFor) {
		this.aliasFor = aliasFor;
	}

	@Column(name = "status")
	public StatusEnum getStatus() {
		return this.status;
	}

	public void setStatus(StatusEnum status) {
		this.status = status;
	}

	public String toString() {
		String s = getDisplayValue(Messages.getLang());
		if (s != null)
			return s;
		else
			s = getResourceValue();
		return s;
	}

	@Override
	@Transient
	public Object getPK() {
		return getId();
	}

	@Override
	@Transient
	public boolean hasLangDefined(String lang) {
		for (LabelML ml : getLabelMLs()) {
			if (ml.getLanguage().getLanguage().equals(lang))
				return true;
		}
		return false;
	}
	@Override
	@Transient
	public String getDisplayValue(String lang) {
		for (LabelML ml : getLabelMLs()) {
			if (ml.getLanguage().getLanguage().equals(lang))
				return ml.getResourceValue();
		}
		return getResourceValue();
	}
	@Override
	@Transient
	public String getDefaultValue() {
		return getResourceValue();
	}
}
