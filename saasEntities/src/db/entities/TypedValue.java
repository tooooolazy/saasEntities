package db.entities;

// Generated 29 ��� 2012 10:31:29 �� by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TypedValue generated by hbm2java
 */
@Entity
@Table(name = "typedvalues")
public class TypedValue implements java.io.Serializable {

	private Integer id;
	private Type type;
	private User userByEdUserId;
	private User userByCrUserId;
	private String value;
	private Date crDate;
	private Date edDate;
	private Set<UserAccount> userAccounts = new HashSet<UserAccount>(0);

	public TypedValue() {
	}

	public TypedValue(Type type, Date crDate) {
		this.type = type;
		this.crDate = crDate;
	}

	public TypedValue(Type type, User userByEdUserId, User userByCrUserId, String value, Date crDate, Date edDate, Set<UserAccount> userAccounts) {
		this.type = type;
		this.userByEdUserId = userByEdUserId;
		this.userByCrUserId = userByCrUserId;
		this.value = value;
		this.crDate = crDate;
		this.edDate = edDate;
		this.userAccounts = userAccounts;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "type_id", nullable = false)
	public Type getType() {
		return this.type;
	}

	public void setType(Type type) {
		this.type = type;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ed_user_id")
	public User getUserByEdUserId() {
		return this.userByEdUserId;
	}

	public void setUserByEdUserId(User userByEdUserId) {
		this.userByEdUserId = userByEdUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cr_user_id")
	public User getUserByCrUserId() {
		return this.userByCrUserId;
	}

	public void setUserByCrUserId(User userByCrUserId) {
		this.userByCrUserId = userByCrUserId;
	}

	@Column(name = "value", length = 150)
	public String getValue() {
		return this.value;
	}

	public void setValue(String value) {
		this.value = value;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "cr_date", nullable = false, length = 19)
	public Date getCrDate() {
		return this.crDate;
	}

	public void setCrDate(Date crDate) {
		this.crDate = crDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ed_date", length = 19)
	public Date getEdDate() {
		return this.edDate;
	}

	public void setEdDate(Date edDate) {
		this.edDate = edDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "defEmail")
	public Set<UserAccount> getUserAccounts() {
		return this.userAccounts;
	}

	public void setUserAccounts(Set<UserAccount> userAccounts) {
		this.userAccounts = userAccounts;
	}

	public String toString() {
		return getType() + ": " + getValue() + " (" + getId() + ")";
	}
}
