package db.entities;

// Generated 13 ��� 2012 12:23:51 �� by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.BatchSize;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * LabelML generated by hbm2java
 */
@Entity
@BatchSize(size=50)
@Table(name = "labels_ml")
@Cacheable
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class LabelML implements java.io.Serializable {

	private LabelMLId id;
	private User userByEdUserId;
	private User userByCrUserId;
	private Label label;
	private Language language;
	private String resourceValue;
	private Date crDate;
	private Date edDate;

	public LabelML() {
	}

	public LabelML(LabelMLId id, Label label, Language language, String resourceValue, Date crDate) {
		this.id = id;
		this.label = label;
		this.language = language;
		this.resourceValue = resourceValue;
		this.crDate = crDate;
	}

	public LabelML(LabelMLId id, User userByEdUserId, User userByCrUserId, Label label, Language language, String resourceValue, Date crDate,
			Date edDate) {
		this.id = id;
		this.userByEdUserId = userByEdUserId;
		this.userByCrUserId = userByCrUserId;
		this.label = label;
		this.language = language;
		this.resourceValue = resourceValue;
		this.crDate = crDate;
		this.edDate = edDate;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "labelId", column = @Column(name = "label_id", nullable = false)),
			@AttributeOverride(name = "langId", column = @Column(name = "lang_id", nullable = false)) })
	public LabelMLId getId() {
		return this.id;
	}

	public void setId(LabelMLId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ed_user_id")
	public User getUserByEdUserId() {
		return this.userByEdUserId;
	}

	public void setUserByEdUserId(User userByEdUserId) {
		this.userByEdUserId = userByEdUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cr_user_id")
	public User getUserByCrUserId() {
		return this.userByCrUserId;
	}

	public void setUserByCrUserId(User userByCrUserId) {
		this.userByCrUserId = userByCrUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "label_id", nullable = false, insertable = false, updatable = false)
	public Label getLabel() {
		return this.label;
	}

	public void setLabel(Label label) {
		this.label = label;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "lang_id", nullable = false, insertable = false, updatable = false)
	public Language getLanguage() {
		return this.language;
	}

	public void setLanguage(Language language) {
		this.language = language;
	}

	@Column(name = "resource_value", nullable = false, length = 65535)
	public String getResourceValue() {
		return this.resourceValue;
	}

	public void setResourceValue(String resourceValue) {
		this.resourceValue = resourceValue;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "cr_date", nullable = false, length = 19)
	public Date getCrDate() {
		return this.crDate;
	}

	public void setCrDate(Date crDate) {
		this.crDate = crDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ed_date", length = 19)
	public Date getEdDate() {
		return this.edDate;
	}

	public void setEdDate(Date edDate) {
		this.edDate = edDate;
	}

}
