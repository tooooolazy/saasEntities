package db.entities;

// Generated 21 ��� 2012 12:09:39 �� by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import db.enums.LabelGroupEnum;
import db.enums.TypeClassGroupEnum;

/**
 * TypeClass generated by hbm2java
 */
@Entity
@Table(name = "typeclass", uniqueConstraints = @UniqueConstraint(columnNames = "className"))
public class TypeClass implements java.io.Serializable {

	private int id;
	private String className;
	private TypeClassGroupEnum group;
	private Set<MethodSecurityLevelDef> methodSecurityLevelDefs = new HashSet<MethodSecurityLevelDef>(0);
	private Set<ObjectSecurityLevelDef> objectSecurityLevelDefs = new HashSet<ObjectSecurityLevelDef>(0);
	private Set<Type> types = new HashSet<Type>(0);

	public TypeClass() {
	}

	public TypeClass(int id) {
		this.id = id;
	}

	public TypeClass(int id, String className, Set<MethodSecurityLevelDef> methodSecurityLevelDefs,
			Set<ObjectSecurityLevelDef> objectSecurityLevelDefs, Set<Type> types) {
		this.id = id;
		this.className = className;
		this.methodSecurityLevelDefs = methodSecurityLevelDefs;
		this.objectSecurityLevelDefs = objectSecurityLevelDefs;
		this.types = types;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "className", unique = true, length = 150)
	public String getClassName() {
		return this.className;
	}

	public void setClassName(String className) {
		this.className = className;
	}

	@Column(name = "group_id")
	public TypeClassGroupEnum getGroupId() {
		return this.group;
	}

	public void setGroupId(TypeClassGroupEnum group) {
		this.group = group;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typeClass")
	public Set<MethodSecurityLevelDef> getMethodSecurityLevelDefs() {
		return this.methodSecurityLevelDefs;
	}

	public void setMethodSecurityLevelDefs(Set<MethodSecurityLevelDef> methodSecurityLevelDefs) {
		this.methodSecurityLevelDefs = methodSecurityLevelDefs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typeClass")
	public Set<ObjectSecurityLevelDef> getObjectSecurityLevelDefs() {
		return this.objectSecurityLevelDefs;
	}

	public void setObjectSecurityLevelDefs(Set<ObjectSecurityLevelDef> objectSecurityLevelDefs) {
		this.objectSecurityLevelDefs = objectSecurityLevelDefs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typeClass")
	public Set<Type> getTypes() {
		return this.types;
	}

	public void setTypes(Set<Type> types) {
		this.types = types;
	}

	public String toString() {
		return getId() + ": " + getClassName();
	}
}
